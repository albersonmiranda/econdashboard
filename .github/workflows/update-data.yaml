on:
  workflow_dispatch:
    
  schedule:
    - cron: "0 7 * * 1-5"

name: update-data

jobs:
  update-data:
    runs-on: macos-latest
    strategy:
      matrix:
        r-version: ['4.0.3']
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Instalar R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.r-version }}

      - name: Cache R Packages
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-shinydoc
          restore-keys: |
            ${{ runner.os }}-

      - name: Instalar DependÃªncias
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          install.packages(c("BETS", "usethis", "rsconnect", "shinydashboardPlus", "golem", "plotly", "bs4Dash", "reticulate", "Rcpp"), type = "binary")
        shell: Rscript {0}

      - name: Install Miniconda
        run: |
          reticulate::install_miniconda()
        shell: Rscript {0}

      - name: Install Python Packages
        run: |
          reticulate::py_install("tabula-py")
        shell: Rscript {0}

      - name: Atualizando Dados de Fundos
        run: source("data-raw/fundos.R")
        shell: Rscript {0}

      - name: Atualizando Resenhas
        run: source("data-raw/resenhas.R")
        shell: Rscript {0}
      
      - name: Atualizando Dados de Conjuntura
        run: source("data-raw/series.R")
        shell: Rscript {0}

      - name: Commit dos dados
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add data/series.rda
          git add data/fundos.rda
          git add data/resenhas_conjuntura.rda
          git add data/resenhas_fundos.rda
          git commit -m 'Update data' || echo "Update data"
          git push origin || echo "Update data"

      - name: Conectando ao ShinyApps
        env:
          SHINY_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINY_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
        run: |
          shiny_token = Sys.getenv("SHINY_TOKEN")
          shiny_secret = Sys.getenv("SHINY_SECRET")
          rsconnect::setAccountInfo('albersonmiranda', token = shiny_token, secret = shiny_secret)
        shell: Rscript {0}

      - name: Deploy to ShinyApps
        run: |
          rsconnect::deployApp(forceUpdate = getOption("rsconnect.force.update.apps", TRUE))
        shell: Rscript {0}
